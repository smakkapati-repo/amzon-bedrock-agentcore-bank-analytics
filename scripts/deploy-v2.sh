#!/bin/bash
# Deploy BankIQ+ v2.0 to AWS Cloud

set -e

echo "🚀 Deploying BankIQ+ v2.0 to AWS Cloud"
echo "======================================="
echo ""

# Check if on v2-cloud branch
BRANCH=$(git branch --show-current)
if [ "$BRANCH" != "v2-cloud" ]; then
    echo "⚠️  Warning: Not on v2-cloud branch (current: $BRANCH)"
    read -p "Continue anyway? (y/n) " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        exit 1
    fi
fi

# Get user's IP address
echo "🔍 Detecting your IP address..."
YOUR_IP=$(curl -s https://checkip.amazonaws.com)
echo "   Your IP: $YOUR_IP"
echo ""

# Confirm IP
read -p "Is this correct? (y/n) " -n 1 -r
echo
if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    read -p "Enter your IP address: " YOUR_IP
fi

IP_CIDR="${YOUR_IP}/32"
echo "   Using IP: $IP_CIDR"
echo ""

# Step 1: Deploy Frontend
echo "📦 Step 1: Deploying Frontend (S3 + CloudFront)"
echo "================================================"
echo ""

FRONTEND_STACK="bankiq-v2-frontend"

echo "Creating CloudFormation stack: $FRONTEND_STACK"
aws cloudformation create-stack \
  --stack-name $FRONTEND_STACK \
  --template-body file://deployment/v2-frontend-cloudfront.yaml \
  --capabilities CAPABILITY_NAMED_IAM \
  --tags Key=Project,Value=BankIQ Key=Version,Value=v2.0.0

echo "⏳ Waiting for frontend stack to complete..."
aws cloudformation wait stack-create-complete --stack-name $FRONTEND_STACK

echo "✅ Frontend stack created!"
echo ""

# Get CloudFront URL
CLOUDFRONT_URL=$(aws cloudformation describe-stacks \
  --stack-name $FRONTEND_STACK \
  --query 'Stacks[0].Outputs[?OutputKey==`CloudFrontURL`].OutputValue' \
  --output text)

BUCKET_NAME=$(aws cloudformation describe-stacks \
  --stack-name $FRONTEND_STACK \
  --query 'Stacks[0].Outputs[?OutputKey==`BucketName`].OutputValue' \
  --output text)

DISTRIBUTION_ID=$(aws cloudformation describe-stacks \
  --stack-name $FRONTEND_STACK \
  --query 'Stacks[0].Outputs[?OutputKey==`CloudFrontDistributionId`].OutputValue' \
  --output text)

echo "   CloudFront URL: https://$CLOUDFRONT_URL"
echo "   S3 Bucket: $BUCKET_NAME"
echo "   Distribution ID: $DISTRIBUTION_ID"
echo ""

# Step 2: Deploy Backend
echo "📦 Step 2: Deploying Backend (Lambda + API Gateway)"
echo "===================================================="
echo ""

BACKEND_STACK="bankiq-v2-backend"

echo "Creating CloudFormation stack: $BACKEND_STACK"
aws cloudformation create-stack \
  --stack-name $BACKEND_STACK \
  --template-body file://deployment/v2-backend-lambda.yaml \
  --parameters ParameterKey=YourIPAddress,ParameterValue=$IP_CIDR \
  --capabilities CAPABILITY_NAMED_IAM \
  --tags Key=Project,Value=BankIQ Key=Version,Value=v2.0.0

echo "⏳ Waiting for backend stack to complete..."
aws cloudformation wait stack-create-complete --stack-name $BACKEND_STACK

echo "✅ Backend stack created!"
echo ""

# Get API Gateway URL
API_URL=$(aws cloudformation describe-stacks \
  --stack-name $BACKEND_STACK \
  --query 'Stacks[0].Outputs[?OutputKey==`ApiGatewayURL`].OutputValue' \
  --output text)

echo "   API Gateway URL: $API_URL"
echo ""

# Step 3: Build and Deploy Frontend
echo "📦 Step 3: Building and Deploying Frontend Code"
echo "================================================"
echo ""

cd frontend

# Update API URL in frontend
echo "Updating API URL in frontend..."
cat > src/config.js << EOF
// Auto-generated by deploy-v2.sh
export const API_URL = '${API_URL}';
export const ENVIRONMENT = 'production';
EOF

echo "Building React app..."
npm run build

echo "Uploading to S3..."
aws s3 sync build/ s3://$BUCKET_NAME/ --delete

echo "Invalidating CloudFront cache..."
aws cloudfront create-invalidation \
  --distribution-id $DISTRIBUTION_ID \
  --paths "/*"

cd ..

echo "✅ Frontend deployed!"
echo ""

# Step 4: Package and Deploy Backend Code
echo "📦 Step 4: Packaging and Deploying Backend Code"
echo "================================================"
echo ""

cd backend

# Install dependencies
echo "Installing dependencies..."
npm install --production
pip install -r requirements.txt -t python/

# Package backend Lambda
echo "Packaging backend Lambda..."
zip -r backend-lambda.zip lambda.js node_modules/ package.json

# Update Lambda function
echo "Updating Lambda function..."
BACKEND_LAMBDA=$(aws cloudformation describe-stacks \
  --stack-name $BACKEND_STACK \
  --query 'Stacks[0].Outputs[?OutputKey==`BackendLambdaArn`].OutputValue' \
  --output text | awk -F: '{print $NF}')

aws lambda update-function-code \
  --function-name $BACKEND_LAMBDA \
  --zip-file fileb://backend-lambda.zip

# Cleanup
rm -rf backend-lambda.zip

echo ""
echo "Note: Using existing AgentCore deployment (no agent packaging needed)"

cd ..

echo "✅ Backend deployed!"
echo ""

# Summary
echo "╔══════════════════════════════════════════════════════════════╗"
echo "║                                                              ║"
echo "║           🎉 BankIQ+ v2.0 Deployment Complete! 🎉           ║"
echo "║                                                              ║"
echo "╚══════════════════════════════════════════════════════════════╝"
echo ""
echo "📊 Deployment Summary:"
echo "   Frontend URL: https://$CLOUDFRONT_URL"
echo "   API URL: $API_URL"
echo "   Allowed IP: $IP_CIDR"
echo ""
echo "🔐 Security:"
echo "   ✅ S3 Bucket: Private (CloudFront OAI only)"
echo "   ✅ CloudFront: Public (UI accessible to anyone)"
echo "   ✅ API Gateway: IP Restricted (only $IP_CIDR)"
echo ""
echo "🎯 Next Steps:"
echo "   1. Open: https://$CLOUDFRONT_URL"
echo "   2. Login with: admin / bankiq2024"
echo "   3. Test all features"
echo ""
echo "🔄 To update your IP:"
echo "   ./scripts/update-ip-v2.sh NEW_IP"
echo ""
echo "📝 To rollback to v1.0:"
echo "   git checkout v1.0.0"
echo "   cd backend && node server.js &"
echo "   cd frontend && npm start"
echo ""
echo "✅ Deployment complete!"
