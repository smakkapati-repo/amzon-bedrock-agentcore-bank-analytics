AWSTemplateFormatVersion: '2010-09-09'
Description: 'BankIQ+ v2.0 Frontend - S3 + CloudFront (Public, No WAF)'

Resources:
  # S3 Bucket for Frontend (Private)
  FrontendBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub 'bankiq-v2-frontend-${AWS::AccountId}'
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: index.html
      VersioningConfiguration:
        Status: Enabled
      Tags:
        - Key: Name
          Value: BankIQ-v2-Frontend
        - Key: Version
          Value: v2.0.0

  # CloudFront Origin Access Identity
  CloudFrontOAI:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: !Sub 'OAI for BankIQ v2.0 Frontend'

  # S3 Bucket Policy (Only CloudFront can access)
  FrontendBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref FrontendBucket
      PolicyDocument:
        Statement:
          - Sid: AllowCloudFrontOAI
            Effect: Allow
            Principal:
              CanonicalUser: !GetAtt CloudFrontOAI.S3CanonicalUserId
            Action: 's3:GetObject'
            Resource: !Sub '${FrontendBucket.Arn}/*'

  # CloudFront Distribution (Public)
  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Enabled: true
        Comment: BankIQ+ v2.0 Frontend (Public UI, API restricted)
        DefaultRootObject: index.html
        HttpVersion: http2and3
        IPV6Enabled: true
        
        # Origin - S3 Bucket
        Origins:
          - Id: S3Origin
            DomainName: !GetAtt FrontendBucket.RegionalDomainName
            S3OriginConfig:
              OriginAccessIdentity: !Sub 'origin-access-identity/cloudfront/${CloudFrontOAI}'
        
        # Default Cache Behavior
        DefaultCacheBehavior:
          TargetOriginId: S3Origin
          ViewerProtocolPolicy: redirect-to-https
          AllowedMethods:
            - GET
            - HEAD
            - OPTIONS
          CachedMethods:
            - GET
            - HEAD
          Compress: true
          ForwardedValues:
            QueryString: false
            Cookies:
              Forward: none
          MinTTL: 0
          DefaultTTL: 3600      # 1 hour
          MaxTTL: 86400         # 24 hours
        
        # Custom Error Responses for SPA
        CustomErrorResponses:
          - ErrorCode: 403
            ResponseCode: 200
            ResponsePagePath: /index.html
            ErrorCachingMinTTL: 300
          - ErrorCode: 404
            ResponseCode: 200
            ResponsePagePath: /index.html
            ErrorCachingMinTTL: 300
        
        # Price Class (US, Canada, Europe)
        PriceClass: PriceClass_100
        
        # Viewer Certificate (HTTPS)
        ViewerCertificate:
          CloudFrontDefaultCertificate: true
          MinimumProtocolVersion: TLSv1.2_2021

Outputs:
  BucketName:
    Description: S3 Bucket Name
    Value: !Ref FrontendBucket
    Export:
      Name: !Sub '${AWS::StackName}-BucketName'

  CloudFrontURL:
    Description: CloudFront Distribution URL
    Value: !GetAtt CloudFrontDistribution.DomainName
    Export:
      Name: !Sub '${AWS::StackName}-CloudFrontURL'

  CloudFrontDistributionId:
    Description: CloudFront Distribution ID
    Value: !Ref CloudFrontDistribution
    Export:
      Name: !Sub '${AWS::StackName}-DistributionId'

  WebsiteURL:
    Description: Website URL (Public - UI only, API calls restricted)
    Value: !Sub 'https://${CloudFrontDistribution.DomainName}'

  DeployCommand:
    Description: Command to deploy frontend
    Value: !Sub |
      # Build React app
      cd frontend && npm run build
      
      # Sync to S3
      aws s3 sync build/ s3://${FrontendBucket}/ --delete
      
      # Invalidate CloudFront cache
      aws cloudfront create-invalidation --distribution-id ${CloudFrontDistribution} --paths "/*"
      
      # Done!
      echo "Frontend deployed to: https://${CloudFrontDistribution.DomainName}"

  SecurityNote:
    Description: Security Configuration
    Value: |
      CloudFront: Public (anyone can see UI)
      S3 Bucket: Private (CloudFront OAI only)
      API Gateway: IP Restricted (see backend deployment)
      Result: UI is public but API calls only work from your IP
