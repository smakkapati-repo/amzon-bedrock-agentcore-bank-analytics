AWSTemplateFormatVersion: '2010-09-09'
Description: 'BankIQ+ Frontend - CloudFront + S3 (Phase 4)'

Parameters:
  ProjectName:
    Type: String
    Default: bankiq
    Description: Project name for resource naming
  
  PrerequisitesStackName:
    Type: String
    Default: bankiq-prerequisites
    Description: Name of the prerequisites stack
  
  BackendStackName:
    Type: String
    Default: bankiq-backend
    Description: Name of the backend stack

Resources:
  # ============================================================================
  # CLOUDFRONT ORIGIN ACCESS CONTROL
  # ============================================================================
  
  CloudFrontOAC:
    Type: AWS::CloudFront::OriginAccessControl
    Properties:
      OriginAccessControlConfig:
        Name: !Sub '${ProjectName}-oac'
        OriginAccessControlOriginType: s3
        SigningBehavior: always
        SigningProtocol: sigv4

  # ============================================================================
  # S3 BUCKET POLICY
  # ============================================================================
  
  FrontendBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Fn::ImportValue: !Sub '${PrerequisitesStackName}-FrontendBucket'
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: AllowCloudFrontServicePrincipal
            Effect: Allow
            Principal:
              Service: cloudfront.amazonaws.com
            Action: s3:GetObject
            Resource: !Sub
              - '${BucketArn}/*'
              - BucketArn:
                  Fn::Sub:
                    - 'arn:aws:s3:::${BucketName}'
                    - BucketName:
                        Fn::ImportValue: !Sub '${PrerequisitesStackName}-FrontendBucket'
            Condition:
              StringEquals:
                AWS:SourceArn: !Sub 'arn:aws:cloudfront::${AWS::AccountId}:distribution/${CloudFrontDistribution}'

  # ============================================================================
  # CLOUDFRONT DISTRIBUTION
  # ============================================================================
  
  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Enabled: true
        Comment: !Sub '${ProjectName} Frontend Distribution'
        DefaultRootObject: index.html
        HttpVersion: http2and3
        PriceClass: PriceClass_100
        
        Origins:
          # S3 Origin for React app
          - Id: S3Origin
            DomainName: !Sub
              - '${BucketName}.s3.${AWS::Region}.amazonaws.com'
              - BucketName:
                  Fn::ImportValue: !Sub '${PrerequisitesStackName}-FrontendBucket'
            OriginAccessControlId: !Ref CloudFrontOAC
            S3OriginConfig:
              OriginAccessIdentity: ''
          
          # ALB Origin for backend API
          - Id: ALBOrigin
            DomainName:
              Fn::ImportValue: !Sub '${BackendStackName}-ALBDnsName'
            CustomOriginConfig:
              HTTPPort: 80
              OriginProtocolPolicy: http-only
              OriginSSLProtocols:
                - TLSv1.2
            OriginCustomHeaders:
              - HeaderName: X-Custom-Header
                HeaderValue: !Sub '${ProjectName}-backend'
        
        DefaultCacheBehavior:
          TargetOriginId: S3Origin
          ViewerProtocolPolicy: redirect-to-https
          AllowedMethods:
            - GET
            - HEAD
            - OPTIONS
          CachedMethods:
            - GET
            - HEAD
          Compress: true
          CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6  # CachingOptimized
          OriginRequestPolicyId: 88a5eaf4-2fd4-4709-b370-b4c650ea3fcf  # CORS-S3Origin
        
        CacheBehaviors:
          # Backend API routes
          - PathPattern: /api/*
            TargetOriginId: ALBOrigin
            ViewerProtocolPolicy: redirect-to-https
            AllowedMethods:
              - GET
              - HEAD
              - OPTIONS
              - PUT
              - POST
              - PATCH
              - DELETE
            CachedMethods:
              - GET
              - HEAD
            Compress: true
            CachePolicyId: 4135ea2d-6df8-44a3-9df3-4b5a84be39ad  # CachingDisabled
            OriginRequestPolicyId: 216adef6-5c7f-47e4-b989-5492eafa07d3  # AllViewer
          
          - PathPattern: /health
            TargetOriginId: ALBOrigin
            ViewerProtocolPolicy: redirect-to-https
            AllowedMethods:
              - GET
              - HEAD
            CachedMethods:
              - GET
              - HEAD
            Compress: true
            CachePolicyId: 4135ea2d-6df8-44a3-9df3-4b5a84be39ad  # CachingDisabled
            OriginRequestPolicyId: 216adef6-5c7f-47e4-b989-5492eafa07d3  # AllViewer
        
        CustomErrorResponses:
          - ErrorCode: 403
            ResponseCode: 200
            ResponsePagePath: /index.html
            ErrorCachingMinTTL: 300
          - ErrorCode: 404
            ResponseCode: 200
            ResponsePagePath: /index.html
            ErrorCachingMinTTL: 300

Outputs:
  StackName:
    Description: Stack name for cross-stack references
    Value: !Ref AWS::StackName
    Export:
      Name: !Sub '${AWS::StackName}-StackName'
  
  CloudFrontDistributionId:
    Description: CloudFront distribution ID
    Value: !Ref CloudFrontDistribution
    Export:
      Name: !Sub '${AWS::StackName}-DistributionId'
  
  CloudFrontDomainName:
    Description: CloudFront domain name
    Value: !GetAtt CloudFrontDistribution.DomainName
    Export:
      Name: !Sub '${AWS::StackName}-DomainName'
  
  ApplicationUrl:
    Description: Application URL
    Value: !Sub 'https://${CloudFrontDistribution.DomainName}'
    Export:
      Name: !Sub '${AWS::StackName}-ApplicationUrl'
